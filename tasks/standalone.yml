---
- name: Create and start a PostgreSQL container
  docker_container:
    name: postgres
    state: started
    restart_policy: unless-stopped
    image: postgres:9.6
    volumes:
      - "{{ awx_postgres_data_dir }}:/var/lib/postgresql/data:Z"
    env:
      POSTGRES_USER: "{{ awx_postgres_user }}"
      POSTGRES_PASSWORD: "{{ awx_postgres_password }}"
      POSTGRES_DB: "{{ awx_postgres_database }}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
  register: __awx_postgres_container
  when: awx_postgres_host is not defined or not awx_postgres_host

- name: Create and start a RabbitMQ container
  docker_container:
    name: rabbitmq
    state: started
    restart_policy: unless-stopped
    image: "{{ awx_rabbitmq_docker_image }}"
    env:
      RABBITMQ_DEFAULT_VHOST: "awx"
      RABBITMQ_ERLANG_COOKIE: "cookiemonster"
  register: __awx_rabbitmq_container

- name: Create and start a Memcached container
  docker_container:
    name: memcached
    state: started
    restart_policy: unless-stopped
    image: "{{ awx_memcached_docker_image }}"
  register: __awx_memcached_container

- name: Wait until all containers are connectable
  wait_for:
    host: "{{ item.container.ansible_facts.docker_container.NetworkSettings.IPAddress }}"
    port: "{{ item.port }}"
  when: item.container is changed
  with_items:
    - name: postgres
      port: 5432
      container: "{{ __awx_postgres_container }}"
    - name: rabbitmq
      port: 5672
      container: "{{ __awx_rabbitmq_container }}"
    - name: memcached
      port: 11211
      container: "{{ __awx_memcached_container }}"
  loop_control:
    label: "{{ item.name }}"

- name: Set awx_postgres_host to linked container's name if left unspecified
  set_fact:
    awx_postgres_host: "{{ awx_postgres_host | default('postgres', True) }}"

- name: Set links for awx_web
  set_fact:
    __awx_web_docker_links:
      - rabbitmq
      - memcached

- name: Add postgres link for awx_web/awx_task
  set_fact:
    __awx_web_docker_links: "{{ __awx_web_docker_links + ['postgres'] }}"
  when: __awx_postgres_container.ansible_facts is defined

- name: Set links for awx_task
  set_fact:
    __awx_task_docker_links: "{{ __awx_web_docker_links + ['awx_web:awxweb'] }}"

- name: Activate AWX Web Container
  docker_container:
    name: awx_web
    state: started
    restart_policy: unless-stopped
    image: "{{ awx_web_docker_image }}"
    volumes: >
      {{
        [project_data_dir + ':/var/lib/awx/projects:rw'] if project_data_dir is defined else []
        + [ca_trust_dir + ':/etc/pki/ca-trust/source/anchors:ro'] if ca_trust_dir is defined else []
      }}
    user: root
    ports:
      - "{{ awx_web_listen_address }}:8052"
    links: "{{ __awx_web_docker_links }}"
    hostname: awxweb
    dns_search_domains: "{{ awx_container_search_domains.split(',') if awx_container_search_domains is defined else omit }}"
    dns_servers: "{{ awx_alternate_dns_servers.split(',') if awx_alternate_dns_servers is defined else omit }}"
    env:
      http_proxy: "{{ http_proxy | default('') }}"
      https_proxy: "{{ https_proxy | default('') }}"
      no_proxy: "{{ no_proxy | default('') }}"
      SECRET_KEY: "{{ secret_key }}"
      DATABASE_NAME: "{{ awx_postgres_database }}"
      DATABASE_USER: "{{ awx_postgres_user }}"
      DATABASE_PASSWORD: "{{ awx_postgres_password }}"
      DATABASE_PORT: "{{ awx_postgres_port }}"
      DATABASE_HOST: "{{ awx_postgres_host }}"
      RABBITMQ_USER: "guest"
      RABBITMQ_PASSWORD: "guest"
      RABBITMQ_HOST: "rabbitmq"
      RABBITMQ_PORT: "5672"
      RABBITMQ_VHOST: "awx"
      MEMCACHED_HOST: "memcached"
      MEMCACHED_PORT: "11211"
      AWX_ADMIN_USER: "{{ default_admin_user|default('admin') }}"
      AWX_ADMIN_PASSWORD: "{{ default_admin_password|default('password') }}"

- name: Activate AWX Task Container
  docker_container:
    name: awx_task
    state: started
    restart_policy: unless-stopped
    image: "{{ awx_task_docker_image }}"
    volumes: >
      {{
        [project_data_dir + ':/var/lib/awx/projects:rw'] if project_data_dir is defined else []
        + [ca_trust_dir + ':/etc/pki/ca-trust/source/anchors:ro'] if ca_trust_dir is defined else []
      }}
    links: "{{ __awx_task_docker_links }}"
    user: root
    hostname: awx
    dns_search_domains: "{{ awx_container_search_domains.split(',') if awx_container_search_domains is defined else omit }}"
    dns_servers: "{{ awx_alternate_dns_servers.split(',') if awx_alternate_dns_servers is defined else omit }}"
    env:
      http_proxy: "{{ http_proxy | default('') }}"
      https_proxy: "{{ https_proxy | default('') }}"
      no_proxy: "{{ no_proxy | default('') }}"
      SECRET_KEY: "{{ secret_key }}"
      DATABASE_NAME: "{{ awx_postgres_database }}"
      DATABASE_USER: "{{ awx_postgres_user }}"
      DATABASE_PASSWORD: "{{ awx_postgres_password }}"
      DATABASE_HOST: "{{ awx_postgres_host }}"
      DATABASE_PORT: "{{ awx_postgres_port }}"
      RABBITMQ_USER: "guest"
      RABBITMQ_PASSWORD: "guest"
      RABBITMQ_HOST: "rabbitmq"
      RABBITMQ_PORT: "5672"
      RABBITMQ_VHOST: "awx"
      MEMCACHED_HOST: "memcached"
      MEMCACHED_PORT: "11211"
      AWX_ADMIN_USER: "{{ default_admin_user|default('admin') }}"
      AWX_ADMIN_PASSWORD: "{{ default_admin_password|default('password') }}"
