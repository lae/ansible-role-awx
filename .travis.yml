---
language: python
sudo: required
dist: trusty
cache:
  directories:
  - "$HOME/lxc"
  pip: true
matrix:
  fast_finish: true
services:
- postgresql
addons:
  postgresql: "9.6"
env:
- ANSIBLE_GIT_VERSION='devel' # 2.6.x development branch
- ANSIBLE_GIT_VERSION='devel' SCENARIO=cleanroom # 2.6.x development branch
- ANSIBLE_VERSION='<2.6.0' # 2.5.x
- ANSIBLE_VERSION='<2.6.0' SCENARIO=cleanroom # 2.5.x
- ANSIBLE_VERSION='<2.5.0' # 2.4.x
- ANSIBLE_VERSION='<2.5.0' SCENARIO=cleanroom # 2.4.x
before_install:
- echo "host all all 10.0.3.0/24 trust" | sudo tee -a /etc/postgresql/9.6/main/pg_hba.conf
- echo "listen_addresses = '*'" | sudo tee -a /etc/postgresql/9.6/main/postgresql.conf
- sudo service postgresql restart
install:
- if [ "$ANSIBLE_GIT_VERSION" ]; then pip install "https://github.com/ansible/ansible/archive/${ANSIBLE_GIT_VERSION}.tar.gz";
  else pip install "ansible${ANSIBLE_VERSION}"; fi
- ansible --version
- ansible-galaxy install lae.travis-lxc lae.docker lae.pip
- ansible-playbook tests/install.yml -i tests/scenarios/${SCENARIO:-default}/inventory
- git archive --format tar.gz HEAD > ben-le.awx.tar.gz && ansible-galaxy install
  ben-le.awx.tar.gz,$(git rev-parse HEAD),ben-le.awx && rm ben-le.awx.tar.gz
before_script: cd tests/
script:
- ansible-playbook -i scenarios/${SCENARIO:-default}/inventory deploy.yml --syntax-check
- ansible-playbook -i scenarios/${SCENARIO:-default}/inventory deploy.yml
- 'ANSIBLE_STDOUT_CALLBACK=debug unbuffer ansible-playbook -vvi scenarios/${SCENARIO:-default}/inventory
  deploy.yml > idempotency.log 2>&1 || (e=$?; cat idempotency.log; exit $e)'
- 'grep -A1 "PLAY RECAP" idempotency.log | grep -qP "changed=0 .*failed=0 .*" &&
  (echo "Idempotence: PASS"; exit 0) || (echo "Idempotence: FAIL"; exit 1)'
- ANSIBLE_STDOUT_CALLBACK=debug ansible-playbook -i scenarios/${SCENARIO:-default}/inventory -v test.yml
notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
